#服务启动端口号
server:
  port: 8888
  connection-timeout: PT30S #修改请用 System.out.println(Duration.ofSeconds(30))  PT30S  PT1M
  tomcat:
    uri-encoding: UTF-8 #编码格式
    min-spare-threads: 10 #线程最小空闲线程数
    accept-count: 200 #最大线程排队数 默认值为100
    max-threads: 100 #最大同时处理的线程数 默认值为200
    max-connections: 200 #最大连接数

spring:
  application:
    name: loadCache #当前项目的对外调用访问的名称
  datasource:
    url: jdbc:mysql://192.168.1.172:3306/ehome_user?characterEncoding=utf8&useSSL=false
    username: root
    password: LiChengWang_20180531
    driver-class-name: com.mysql.jdbc.Driver
    platform: mysql
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    initialSize: 3 # 初始化大小
    minIdle: 5 # 最小空闲连接
    maxActive: 10 # 最大连接
    maxWait: 60000 # 配置获取连接等待超时的时间
    timeBetweenEvictionRunsMillis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true

  redis:
    database: 0  #数据库 默认0号库 0库用于存储用户相关信息
    host: 192.168.1.162 #单机时需要指定
    password: LiChengWang_redis_20180604
    port: 6379 #单机时需要指定
    timeout: PT10S # 连接超时时间（毫秒）默认是2000  改成10秒 修改请用 System.out.println(Duration.ofSeconds(10))
    jedis:
      pool:
        max-idle: 5 # 连接池中的最大空闲连接
        min-idle: 3 # 连接池中的最小空闲连接
        max-active: 10 #连接池最大连接数
        max-wait: PT24H # 连接池最大阻塞等待时间 改成1天 修改请用 System.out.println(Duration.ofDays(1))
#    sentinel: #哨兵配置
#      master: mymaster #哨兵监听的Redis server的名称
#      nodes: 192.168.1.160:26379 #哨兵多台时，分隔  如192.168.1.160:26379,192.168.1.163:26379

eureka:
  instance:
    hostname: localhost #主机名 目前只能写localhost 否则报错
    prefer-ip-address: true #显示IP
    instance-id: ${spring.application.name}:${spring.application.instance-id:${server.port}}
  client:
    serviceUrl:
      defaultZone: http://192.168.1.160:8761/eureka/
